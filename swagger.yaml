openapi: "3.0.1"
info:
  title: learn express and swagger
  description: a course segment about writing docs
  version: 1.1.0
  contact:
    email: lucky@bigwings.us
    url: "google.com"

# servers:
#   - url: "https://localhost:4000/api/v1"
#     description: for local host - secure
#   - url: "http://localhost:4000/api/v1"
#     description: for local host - regular

servers:
  - url: "{protocol}://localhost:4000/api/{version}"
    description: for local host - secure
    variables:
      version:
        enum:
          - v1
          - v2
        default: v1
      protocol:
        enum:
          - http
          - https
        default: http

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
    BearerAuth:
      type: http
      scheme: bearer

paths:
  /lco:
    get:
      tags:
        - String
      summary: returns a message from lco
      responses:
        200:
          description: All good and success
          content:
            application/json:
              schema:
                type: string
                example: "myString"
        400:
          description: Bad request
        500:
          description: Interval server error

  /lcoobject:
    get:
      tags:
        - Object
      summary: returns a unique course
      responses:
        200:
          description: All good and success
          content:
            application/json:
              schema:
                type: object
                properties: # Properties only used in case of type object
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
        400:
          description: Bad request
        500:
          description: Interval server error

  /courses:
    get:
      tags:
        - Array
      summary: returns all courses
      responses:
        200:
          description: All good and success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties: # Properties only used in case of type object
                    id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number
        400:
          description: Bad request
        500:
          description: Interval server error

  /mycourse/{courseId}:
    get:
      tags:
        - String
      summary: returns course based on request id
      parameters:
        - name: courseId
          in: path
          required: true
          dafault: 22
          schema:
            type: string
      responses:
        200:
          description: All good and success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
        400:
          description: Bad request
        500:
          description: Interval server error